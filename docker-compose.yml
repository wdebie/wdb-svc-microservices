services:
  # START OF DATABASE CONTAINERS

  mariadb-schedule:
    image: mariadb
    restart: always
    container_name: mariadb-schedule
    environment:
      MARIADB_DB_USERNAME: root
      MARIADB_DB_PASSWORD: ${SCHEDULE_DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${SCHEDULE_DB_PASSWORD}
    volumes:
      - schedule_data:/var/lib/mysql/
    healthcheck:
      test: [ "CMD", "mariadb", "-h", "localhost", "-u", "root", "-p${SCHEDULE_DB_PASSWORD}", "-e", "SELECT 1" ]
      interval: 5s
      timeout: 10s
      retries: 5

  mongodb-artist:
    image: mongo
    container_name: mongodb-artist
    restart: always
    volumes:
      - artist_data:/data/db
    healthcheck:
      test: ["CMD","mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 5s
      timeout: 10s
      retries: 5

  mysql-food:
    image: mysql
    restart: always
    container_name: mysql-food
    environment:
      MYSQL_DB_USERNAME: root
      MYSQL_DB_PASSWORD: ${FOOD_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${FOOD_DB_PASSWORD}
    volumes:
      - food_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mysql", "-h", "localhost", "-u", "root", "-p${FOOD_DB_PASSWORD}", "-e", "SELECT 1" ]
      interval: 5s
      timeout: 10s
      retries: 5

  mariadb-stage:
    image: mariadb
    restart: always
    container_name: mariadb-stage
    environment:
      MARIADB_DB_USERNAME: root
      MARIADB_DB_PASSWORD: ${STAGE_DB_PASSWORD}
      MARIADB_ROOT_PASSWORD: ${STAGE_DB_PASSWORD}
    volumes:
      - stage_data:/var/lib/mysql
    healthcheck:
      test: [ "CMD", "mariadb", "-h", "localhost", "-u", "root", "-p${STAGE_DB_PASSWORD}", "-e", "SELECT 1" ]
      interval: 5s
      timeout: 10s
      retries: 5

  # START OF SERVICE CONTAINERS

  schedule-service:
    depends_on:
      mariadb-schedule:
        condition: service_healthy
    image: willemdebie/schedule-service
    container_name: schedule-service
    ports:
      - 8081:8081
    links:
      - artist-service
      - food-service
      - stage-service
    environment:
      ARTIST_SERVICE_BASEURL: artist-service:8082
      FOOD_SERVICE_BASEURL: food-service:8083
      STAGE_SERVICE_BASEURL: stage-service:8084
      MARIADB_DB_USERNAME: root
      MARIADB_DB_PASSWORD: ${SCHEDULE_DB_PASSWORD}
      MARIADB_DB_HOST: mariadb-schedule

  artist-service:
    depends_on:
      mongodb-artist:
        condition: service_healthy
    image: willemdebie/artist-service
    container_name: artist-service
    ports:
      - 8082:8082
    environment:
      MONGODB_HOST: mongodb-artist
      MONGODB_USERNAME: root
      MONGODB_PASSWORD: ${ARTIST_DB_PASSWORD}

  food-service:
    depends_on:
      mysql-food:
        condition: service_healthy
    image: willemdebie/food-service
    container_name: food-service
    ports:
      - 8083:8083
    environment:
      MYSQL_DB_USERNAME: root
      MYSQL_DB_PASSWORD: ${FOOD_DB_PASSWORD}
      MYSQL_DB_HOST: mysql-food

  stage-service:
    depends_on:
      mariadb-stage:
        condition: service_healthy
    image: willemdebie/stage-service
    container_name: stage-service
    ports:
      - 8084:8084
    environment:
      MARIADB_DB_USERNAME: root
      MARIADB_DB_PASSWORD: ${STAGE_DB_PASSWORD}
      MARIADB_DB_HOST: mariadb-stage

  # START OF API GATEWAY

  api-gateway:
   depends_on:
     - schedule-service
     - artist-service
     - food-service
     - stage-service
   image: willemdebie/api-gateway
   container_name: api-gateway
   ports:
     - 8080:8080
   environment:
     SCHEDULE_SERVICE_BASEURL: schedule-service:8081
     ARTIST_SERVICE_BASEURL: artist-service:8082
     FOOD_SERVICE_BASEURL: food-service:8083
     STAGE_SERVICE_BASEURL: stage-service:8084


  # START OF ADMINER TOOL

  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080

  # START OF DATA VOLUMES

volumes:
  schedule_data:
  artist_data:
  food_data:
  stage_data:
